{"version":3,"file":"166.d3e7b1c6.iframe.bundle.js","mappings":";;;;;;;AA+zBA;;;;;;;AAQA;;;;;AAMA;;;;;;AAMA;AArDA;AAwDA;AAxDA;;;AA4DA;AAEA;AACA;;AA/DA;;AAoEA;AACA;;AAtEA;AAAA;;AAWA;AAiEA;;AA5EA;AAAA;;;AAYA;AAuEA;;;;;AAtEA;AA4EA;;AA3EA;AA8EA;;AAGA;AACA;;AAhGA;;AAWA;AA0FA;;;AArGA;;;;AAYA;AAiGA;;;;;AAhGA;;;AACA;AAwGA;;AAGA;AACA;;AA1HA;;AAWA;AAoHA;;;AA/HA;;;;AAYA;AA2HA;;;;;AA1HA;AAgIA;;AA/HA;;;AA0IA","sources":["webpack://@collaborne/remirror-entity-extension/./node_modules/@remirror/theme/dist/remirror-theme.js"],"sourcesContent":["import { transparentize, lighten, darken, readableColor } from 'color2k';\n\n/**\n * Create the theme variables from the provided theme.\n *\n * This function can't use anything from `@remirror/core-helpers` due to being\n * used in the `themeStyles` css. Babel can't resolve the imported functions in\n * development.\n */\nfunction createThemeVariables(theme = {}) {\n  const cssVariableString = [];\n  const cssVariableObject = {};\n\n  function addCssVariable(keys, value) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      cssVariableString.push(`${getCustomPropertyName(keys)}: ${value};`);\n      cssVariableObject[getCustomPropertyName(keys)] = value;\n      return;\n    }\n\n    if (typeof value !== 'object' || !value) {\n      return;\n    }\n\n    for (const [key, v] of Object.entries(value)) {\n      addCssVariable([...keys, key], v);\n    }\n\n    return;\n  }\n\n  for (const [key, value] of Object.entries(theme)) {\n    addCssVariable([key], value);\n  }\n\n  return {\n    css: cssVariableString.join('\\n'),\n    styles: cssVariableObject\n  };\n}\n/**\n * Aliased name for the color type. It's just a string.\n */\n\nfunction simpleKebabCase(str) {\n  return str.replace(/([a-z])([\\dA-Z])/g, '$1-$2').replace(/[\\s_]+/g, '-').toLowerCase();\n}\n/**\n * Get the remirror variable from the keys to access it in the theme object.\n */\n\n\nfunction getCustomPropertyName(keys) {\n  return `--rmr-${keys.map(simpleKebabCase).join('-')}`;\n}\n/**\n * Get the custom property from the keys used to access it in the theme object.\n */\n\n\nfunction getVar(keys) {\n  return `var(${getCustomPropertyName(keys)})`;\n}\n\nfunction keyCapturingProxy(getter) {\n  const keys = [];\n\n  function createProxy(obj) {\n    /**\n     * Track the number of times this has been called. This proxy only supports\n     * simple getters which access the keys only without any extra functionality.\n     */\n    let called = false;\n    return new Proxy(obj, {\n      get: (_, key) => {\n        if (called) {\n          throw new Error(`Must only access the key once. ${key.toString()}`);\n        }\n\n        called = true;\n        keys.push(key);\n        return createProxy({});\n      },\n      set: (_, key) => {\n        throw new Error(`Setters are not allowed for this object. ${key.toString()}`); // invariant(false, { message: `Setters are not allowed for this object. ${key.toString()}` });\n      }\n    });\n  }\n\n  getter(createProxy({}));\n  return keys;\n}\n/**\n * Get the theme custom property wrapped in a `var`.\n *\n * ```ts\n * import { getTheme } from '@remirror/theme';\n * getTheme((t) => t.color.primary.text) => `var(--rmr-color-primary-text)`\n * ```\n *\n * @deprecated use getThemeVar instead\n */\n\n\nfunction getTheme(getter) {\n  return getVar(keyCapturingProxy(getter));\n}\n/**\n * Get the theme custom property wrapped in a `var`.\n *\n * ```ts\n * import { getThemeVar } from '@remirror/theme';\n * getThemeVar('color', 'primary', 'text') => `var(--rmr-color-primary-text)`\n * ```\n */\n\nfunction getThemeVar(...args) {\n  return getVar(args.map(p => p.toString()));\n}\n/**\n * Get the name of the theme property.\n *\n * ```ts\n * import {getThemeProps} from '@remirror/theme';\n * getThemeProps((t) => t.color.primary.text) => `--rmr-color-primary-text`\n * ```\n *\n * @deprecated use getThemeVarName instead\n */\n\nfunction getThemeProps(getter) {\n  return getCustomPropertyName(keyCapturingProxy(getter));\n}\n/**\n * Get the theme custom property wrapped in a `var`.\n *\n * ```ts\n * import { getThemeVarName } from '@remirror/theme';\n * getThemeVarName('color', 'primary', 'text') => `--rmr-color-primary-text`\n * ```\n */\n\nfunction getThemeVarName(...args) {\n  return getCustomPropertyName(args.map(p => p.toString()));\n} // defaultRemirrorThemeHue is copied from https://github.com/yeun/open-color/blob/v1.7.0/open-color.json\n\nconst defaultRemirrorThemeHue = {\n  gray: ['#f8f9fa', '#f1f3f5', '#e9ecef', '#dee2e6', '#ced4da', '#adb5bd', '#868e96', '#495057', '#343a40', '#212529'],\n  red: ['#fff5f5', '#ffe3e3', '#ffc9c9', '#ffa8a8', '#ff8787', '#ff6b6b', '#fa5252', '#f03e3e', '#e03131', '#c92a2a'],\n  pink: ['#fff0f6', '#ffdeeb', '#fcc2d7', '#faa2c1', '#f783ac', '#f06595', '#e64980', '#d6336c', '#c2255c', '#a61e4d'],\n  grape: ['#f8f0fc', '#f3d9fa', '#eebefa', '#e599f7', '#da77f2', '#cc5de8', '#be4bdb', '#ae3ec9', '#9c36b5', '#862e9c'],\n  violet: ['#f3f0ff', '#e5dbff', '#d0bfff', '#b197fc', '#9775fa', '#845ef7', '#7950f2', '#7048e8', '#6741d9', '#5f3dc4'],\n  indigo: ['#edf2ff', '#dbe4ff', '#bac8ff', '#91a7ff', '#748ffc', '#5c7cfa', '#4c6ef5', '#4263eb', '#3b5bdb', '#364fc7'],\n  blue: ['#e7f5ff', '#d0ebff', '#a5d8ff', '#74c0fc', '#4dabf7', '#339af0', '#228be6', '#1c7ed6', '#1971c2', '#1864ab'],\n  cyan: ['#e3fafc', '#c5f6fa', '#99e9f2', '#66d9e8', '#3bc9db', '#22b8cf', '#15aabf', '#1098ad', '#0c8599', '#0b7285'],\n  teal: ['#e6fcf5', '#c3fae8', '#96f2d7', '#63e6be', '#38d9a9', '#20c997', '#12b886', '#0ca678', '#099268', '#087f5b'],\n  green: ['#ebfbee', '#d3f9d8', '#b2f2bb', '#8ce99a', '#69db7c', '#51cf66', '#40c057', '#37b24d', '#2f9e44', '#2b8a3e'],\n  lime: ['#f4fce3', '#e9fac8', '#d8f5a2', '#c0eb75', '#a9e34b', '#94d82d', '#82c91e', '#74b816', '#66a80f', '#5c940d'],\n  yellow: ['#fff9db', '#fff3bf', '#ffec99', '#ffe066', '#ffd43b', '#fcc419', '#fab005', '#f59f00', '#f08c00', '#e67700'],\n  orange: ['#fff4e6', '#ffe8cc', '#ffd8a8', '#ffc078', '#ffa94d', '#ff922b', '#fd7e14', '#f76707', '#e8590c', '#d9480f']\n};\nconst foreground = '#000000';\nconst background = '#ffffff';\nconst text = '#252103';\nconst border = transparentize(foreground, 0.75);\nconst primary = '#7963d2';\nconst secondary = '#bcd263';\nconst primaryText = '#fff';\nconst secondaryText = '#fff';\nconst muted = defaultRemirrorThemeHue.gray[1];\nconst shadow1 = 'rgba(10,31,68,0.08)';\nconst shadow2 = 'rgba(10,31,68,0.10)';\nconst shadow3 = 'rgba(10,31,68,0.12)';\nconst faded = lighten(transparentize(foreground, 0.1), 0.13);\nconst baseColorTheme = {\n  background,\n  border,\n  foreground,\n  muted,\n  primary,\n  secondary,\n  primaryText,\n  secondaryText,\n  text,\n  faded\n};\nconst activeColorTheme = { ...baseColorTheme,\n  background: darken(background, 0.15),\n  border: darken(border, 0.15),\n  foreground: darken(foreground, 0.15),\n  muted: darken(muted, 0.15),\n  primary: darken(primary, 0.15),\n  secondary: darken(secondary, 0.15),\n\n  get text() {\n    return readableColor(this.background);\n  },\n\n  get primaryText() {\n    return readableColor(this.primary);\n  },\n\n  get secondaryText() {\n    return readableColor(this.secondary);\n  }\n\n};\nconst hoverColorTheme = { ...baseColorTheme,\n  background: darken(background, 0.075),\n  border: darken(border, 0.075),\n  foreground: darken(foreground, 0.075),\n  muted: darken(muted, 0.075),\n  primary: darken(primary, 0.075),\n  secondary: darken(secondary, 0.075),\n\n  get text() {\n    return readableColor(this.background);\n  },\n\n  get primaryText() {\n    return readableColor(this.primary);\n  },\n\n  get secondaryText() {\n    return readableColor(this.secondary);\n  }\n\n};\n/**\n * The default remirror theme. This can be mutated with the\n * `mutateRemirrorTheme`.\n */\n\nconst defaultRemirrorTheme = {\n  color: { ...baseColorTheme,\n    active: activeColorTheme,\n    hover: hoverColorTheme,\n    shadow1,\n    shadow2,\n    shadow3,\n    backdrop: transparentize(foreground, 0.1),\n    outline: transparentize(primary, 0.6),\n    table: {\n      default: {\n        border: lighten(foreground, 0.8),\n        cell: lighten(foreground, 0.4),\n        controller: defaultRemirrorThemeHue.gray[3]\n      },\n      selected: {\n        border: defaultRemirrorThemeHue.blue[7],\n        cell: defaultRemirrorThemeHue.blue[1],\n        controller: defaultRemirrorThemeHue.blue[5]\n      },\n      preselect: {\n        border: defaultRemirrorThemeHue.blue[7],\n        cell: lighten(foreground, 0.4),\n        controller: defaultRemirrorThemeHue.blue[5]\n      },\n      predelete: {\n        border: defaultRemirrorThemeHue.red[7],\n        cell: defaultRemirrorThemeHue.red[1],\n        controller: defaultRemirrorThemeHue.red[5]\n      },\n      mark: '#91919196'\n    }\n  },\n  hue: defaultRemirrorThemeHue,\n  radius: {\n    border: '0.25rem',\n    extra: '0.5rem',\n    circle: '50%'\n  },\n  fontFamily: {\n    default: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    mono: 'Menlo, monospace'\n  },\n  fontSize: {\n    0: '12px',\n    1: '14px',\n    2: '16px',\n    3: '20px',\n    4: '24px',\n    5: '32px',\n    6: '48px',\n    7: '64px',\n    8: '96px',\n    default: '16px'\n  },\n  space: {\n    1: '4px',\n    2: '8px',\n    3: '16px',\n    4: '32px',\n    5: '64px',\n    6: '128px',\n    7: '256px',\n    8: '512px'\n  },\n  fontWeight: {\n    bold: '700',\n    default: '400',\n    heading: '700'\n  },\n  letterSpacing: {\n    tight: '-1px',\n    default: 'normal',\n    loose: '1px',\n    wide: '3px'\n  },\n  lineHeight: {\n    heading: '1.25em',\n    default: '1.5em'\n  },\n  boxShadow: {\n    1: `0 1px 1px ${shadow1}`,\n    2: `0 1px 1px ${shadow2}`,\n    3: `0 1px 1px ${shadow3}`\n  }\n};\n\ngetThemeVar('color', 'foreground');\ngetThemeVar('color', 'text');\ngetThemeVar('color', 'background');\ngetThemeVar('color', 'backdrop');\ngetThemeVar('color', 'border');\ngetThemeVar('color', 'shadow1');\ngetThemeVar('color', 'hover', 'border');\ngetThemeVar('color', 'active', 'border');\ngetThemeVar('color', 'primary');\ngetThemeVar('color', 'primaryText');\ngetThemeVar('color', 'hover', 'primary');\ngetThemeVar('color', 'hover', 'primaryText');\ngetThemeVar('color', 'active', 'primary');\ngetThemeVar('color', 'active', 'primaryText');\nconst EDITOR_WRAPPER = \"remirror-editor-wrapper\";\nconst BUTTON_ACTIVE = \"remirror-button-active\";\nconst BUTTON = \"remirror-button\";\nconst COMPOSITE = \"remirror-composite\";\nconst DIALOG = \"remirror-dialog\";\nconst DIALOG_BACKDROP = \"remirror-dialog-backdrop\";\nconst FORM = \"remirror-form\";\nconst FORM_MESSAGE = \"remirror-form-message\";\nconst FORM_LABEL = \"remirror-form-label\";\nconst FORM_GROUP = \"remirror-form-group\";\nconst GROUP = \"remirror-group\";\nconst INPUT = \"remirror-input\";\nconst MENU = \"remirror-menu\";\nconst MENU_PANE = \"remirror-menu-pane\";\nconst MENU_PANE_ACTIVE = \"remirror-menu-pane-active\";\nconst MENU_DROPDOWN_LABEL = \"remirror-menu-dropdown-label\";\nconst MENU_PANE_ICON = \"remirror-menu-pane-icon\";\nconst MENU_PANE_LABEL = \"remirror-menu-pane-label\";\nconst MENU_PANE_SHORTCUT = \"remirror-menu-pane-shortcut\";\nconst MENU_BUTTON_LEFT = \"remirror-menu-button-left\";\nconst MENU_BUTTON_RIGHT = \"remirror-menu-button-right\";\nconst MENU_BUTTON_NESTED_LEFT = \"remirror-menu-button-nested-left\";\nconst MENU_BUTTON_NESTED_RIGHT = \"remirror-menu-button-nested-right\";\nconst MENU_BUTTON = \"remirror-menu-button\";\nconst MENU_BAR = \"remirror-menu-bar\";\nconst FLEX_COLUMN = \"remirror-flex-column\";\nconst FLEX_ROW = \"remirror-flex-row\";\nconst MENU_ITEM = \"remirror-menu-item\";\nconst MENU_ITEM_ROW = \"remirror-menu-item-row\";\nconst MENU_ITEM_COLUMN = \"remirror-menu-item-column\";\nconst MENU_ITEM_CHECKBOX = \"remirror-menu-item-checkbox\";\nconst MENU_ITEM_RADIO = \"remirror-menu-item-radio\";\nconst MENU_GROUP = \"remirror-menu-group\";\nconst FLOATING_POPOVER = \"remirror-floating-popover\";\nconst POPOVER = \"remirror-popover\";\nconst ANIMATED_POPOVER = \"remirror-animated-popover\";\nconst ROLE = \"remirror-role\";\nconst SEPARATOR = \"remirror-separator\";\nconst TAB = \"remirror-tab\";\nconst TAB_LIST = \"remirror-tab-list\";\nconst TABBABLE = \"remirror-tabbable\";\nconst TOOLBAR = \"remirror-toolbar\";\nconst TOOLTIP = \"remirror-tooltip\";\nconst TABLE_SIZE_EDITOR = \"remirror-table-size-editor\";\nconst TABLE_SIZE_EDITOR_BODY = \"remirror-table-size-editor-body\";\nconst TABLE_SIZE_EDITOR_CELL = \"remirror-table-size-editor-cell\";\nconst TABLE_SIZE_EDITOR_CELL_SELECTED = \"remirror-table-size-editor-cell-selected\";\nconst TABLE_SIZE_EDITOR_FOOTER = \"remirror-table-size-editor-footer\";\nconst COLOR_PICKER = \"remirror-color-picker\";\nconst COLOR_PICKER_CELL = \"remirror-color-picker-cell\";\nconst COLOR_PICKER_CELL_SELECTED = \"remirror-color-picker-cell-selected\";\n\nvar componentsTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR_WRAPPER: EDITOR_WRAPPER,\n  BUTTON_ACTIVE: BUTTON_ACTIVE,\n  BUTTON: BUTTON,\n  COMPOSITE: COMPOSITE,\n  DIALOG: DIALOG,\n  DIALOG_BACKDROP: DIALOG_BACKDROP,\n  FORM: FORM,\n  FORM_MESSAGE: FORM_MESSAGE,\n  FORM_LABEL: FORM_LABEL,\n  FORM_GROUP: FORM_GROUP,\n  GROUP: GROUP,\n  INPUT: INPUT,\n  MENU: MENU,\n  MENU_PANE: MENU_PANE,\n  MENU_PANE_ACTIVE: MENU_PANE_ACTIVE,\n  MENU_DROPDOWN_LABEL: MENU_DROPDOWN_LABEL,\n  MENU_PANE_ICON: MENU_PANE_ICON,\n  MENU_PANE_LABEL: MENU_PANE_LABEL,\n  MENU_PANE_SHORTCUT: MENU_PANE_SHORTCUT,\n  MENU_BUTTON_LEFT: MENU_BUTTON_LEFT,\n  MENU_BUTTON_RIGHT: MENU_BUTTON_RIGHT,\n  MENU_BUTTON_NESTED_LEFT: MENU_BUTTON_NESTED_LEFT,\n  MENU_BUTTON_NESTED_RIGHT: MENU_BUTTON_NESTED_RIGHT,\n  MENU_BUTTON: MENU_BUTTON,\n  MENU_BAR: MENU_BAR,\n  FLEX_COLUMN: FLEX_COLUMN,\n  FLEX_ROW: FLEX_ROW,\n  MENU_ITEM: MENU_ITEM,\n  MENU_ITEM_ROW: MENU_ITEM_ROW,\n  MENU_ITEM_COLUMN: MENU_ITEM_COLUMN,\n  MENU_ITEM_CHECKBOX: MENU_ITEM_CHECKBOX,\n  MENU_ITEM_RADIO: MENU_ITEM_RADIO,\n  MENU_GROUP: MENU_GROUP,\n  FLOATING_POPOVER: FLOATING_POPOVER,\n  POPOVER: POPOVER,\n  ANIMATED_POPOVER: ANIMATED_POPOVER,\n  ROLE: ROLE,\n  SEPARATOR: SEPARATOR,\n  TAB: TAB,\n  TAB_LIST: TAB_LIST,\n  TABBABLE: TABBABLE,\n  TOOLBAR: TOOLBAR,\n  TOOLTIP: TOOLTIP,\n  TABLE_SIZE_EDITOR: TABLE_SIZE_EDITOR,\n  TABLE_SIZE_EDITOR_BODY: TABLE_SIZE_EDITOR_BODY,\n  TABLE_SIZE_EDITOR_CELL: TABLE_SIZE_EDITOR_CELL,\n  TABLE_SIZE_EDITOR_CELL_SELECTED: TABLE_SIZE_EDITOR_CELL_SELECTED,\n  TABLE_SIZE_EDITOR_FOOTER: TABLE_SIZE_EDITOR_FOOTER,\n  COLOR_PICKER: COLOR_PICKER,\n  COLOR_PICKER_CELL: COLOR_PICKER_CELL,\n  COLOR_PICKER_CELL_SELECTED: COLOR_PICKER_CELL_SELECTED\n});\n\n/**\n * This is compiled into the class name `remirror-editor` and the css is\n * automatically generated and placed into the `@remirror/styles/core.css` via\n * a `linaria` build script.\n */\n\nconst EDITOR$8 = \"remirror-editor\";\n\nvar coreTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR$8\n});\n\n/**\n * This is compiled into the class name `remirror-editor` and the css is\n * automatically generated and placed into the `@remirror/styles/core.css` via\n * a `linaria` build script.\n */\n\nconst EDITOR$7 = \"remirror-editor\";\n\nvar extensionBlockquoteTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR$7\n});\n\n/**\n * This is compiled into the class name `remirror-editor` and the css is\n * automatically generated and placed into the `@remirror/styles/core.css` via\n * a `linaria` build script.\n */\n\nconst CALLOUT_EMOJI_WRAPPER = 'remirror-callout-emoji-wrapper';\nconst EDITOR$6 = \"remirror-editor\";\n\nvar extensionCalloutTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CALLOUT_EMOJI_WRAPPER: CALLOUT_EMOJI_WRAPPER,\n  EDITOR: EDITOR$6\n});\n\n/**\n * Sets the code block to wrap the text.\n */\n\nconst WRAP = \"remirror-wrap\";\n/**\n * a11y-dark theme for JavaScript, CSS, and HTML Based on the okaidia theme:\n * https://github.com/PrismJS/prism/blob/gh-pages/themes/prism-okaidia.css\n * @author ericwbailey\n */\n\nconst A11Y_DARK = \"remirror-a11y-dark\";\n/**\n * atom-dark theme for `prism.js` Based on Atom's `atom-dark` theme:\n * https://github.com/atom/atom-dark-syntax\n * @author Joe Gibson (@gibsjose)\n */\n\nconst ATOM_DARK = \"remirror-atom-dark\";\n/*\nName:       Base16 Atelier Sulphurpool Light Author:     Bram de Haan\n(http://atelierbram.github.io/syntax-highlighting/atelier-schemes/sulphurpool)\nPrism template by Bram de Haan\n(http://atelierbram.github.io/syntax-highlighting/prism/) Original Base16 color\nscheme by Chris Kempson (https://github.com/chriskempson/base16)\n*/\n\nconst BASE16_ATELIERSULPHURPOOL_LIGHT = \"remirror-base16-ateliersulphurpool-light\";\n/**\n * Based on Plugin: Syntax Highlighter CB Plugin URI:\n * http://wp.tutsplus.com/tutorials/plugins/adding-a-syntax-highlighter-shortcode-using-prism-js\n * Description: Highlight your code snippets with an easy to use shortcode based\n * on Lea Verou's Prism.js. Version: 1.0.0 Author: c.bavota Author URI:\n * http://bavotasan.comhttp://wp.tutsplus.com/tutorials/plugins/adding-a-syntax-highlighter-shortcode-using-prism-js/\n * http://cbavota.bitbucket.org/syntax-highlighter/\n */\n\nconst CB = \"remirror-cb\";\n/**\n * Darcula theme\n *\n * Adapted from a theme based on: IntelliJ Darcula Theme\n * (https://github.com/bulenkov/Darcula)\n *\n * @author Alexandre Paradis <service.paradis@gmail.com>\n * @version 1.0\n */\n\nconst DARCULA = \"remirror-darcula\";\n/**\n * Dracula Theme originally by Zeno Rocha [@zenorocha] https://draculatheme.com/\n *\n * Ported for PrismJS by Albert Vallverdu [@byverdu]\n */\n\nconst DRACULA = \"remirror-dracula\";\n/*\nName: Duotone Dark Author: Simurai, adapted from DuoTone themes for Atom\n(http://simurai.com/projects/2016/01/01/duotone-themes)\n\nConversion: Bram de Haan\n(http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\nGenerated with Base16 Builder (https://github.com/base16-builder/base16-builder)\n*/\n\nconst DUOTONE_DARK = \"remirror-duotone-dark\";\n/**\n * Name:   Duotone Earth Author: Simurai, adapted from DuoTone themes for Atom\n * (http://simurai.com/projects/2016/01/01/duotone-themes)\n *\n * Conversion: Bram de Haan\n * (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-earth-dark.css)\n * Generated with Base16 Builder\n * (https://github.com/base16-builder/base16-builder)\n */\n\nconst DUOTONE_EARTH = \"remirror-duotone-earth\";\n/**\n * Name:   Duotone Forest Author: by Simurai, adapted from DuoTone themes for\n * Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n *\n * Conversion: Bram de Haan\n * (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-forest-dark.css)\n * Generated with Base16 Builder\n * (https://github.com/base16-builder/base16-builder)\n */\n\nconst DUOTONE_FOREST = \"remirror-duotone-forest\";\n/**\n * Name:   Duotone Light Author: Simurai, adapted from DuoTone themes for Atom\n * (http://simurai.com/projects/2016/01/01/duotone-themes)\n *\n * Conversion: Bram de Haan\n * (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-morning-light.css)\n * Generated with Base16 Builder\n * (https://github.com/base16-builder/base16-builder)\n */\n\nconst DUOTONE_LIGHT = \"remirror-duotone-light\";\n/**\n * Name: Duotone Sea Author: by Simurai, adapted from DuoTone themes by Simurai\n * for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n *\n * Conversion: Bram de Haan\n * (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-sea-dark.css)\n * Generated with Base16 Builder\n * (https://github.com/base16-builder/base16-builder)\n */\n\nconst DUOTONE_SEA = \"remirror-duotone-sea\";\n/**\n * Name: Duotone Space Author: Simurai, adapted from DuoTone themes for Atom\n * (http://simurai.com/projects/2016/01/01/duotone-themes)\n *\n * Conversion: Bram de Haan\n * (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-space-dark.css)\n * Generated with Base16 Builder\n * (https://github.com/base16-builder/base16-builder)\n */\n\nconst DUOTONE_SPACE = \"remirror-duotone-space\";\n/**\n * GHColors theme by Avi Aryan (http://aviaryan.in) Inspired by Github syntax\n * coloring\n */\n\nconst GH_COLORS = \"remirror-gh-colors\";\n/**\n * Hopscotch by Jan T. Sott https://github.com/idleberg/Hopscotch\n *\n * This work is licensed under the Creative Commons CC0 1.0 Universal License\n */\n\nconst HOPSCOTCH = \"remirror-hopscotch\";\n/**\n * Pojoaque Style by Jason Tate\n * http://web-cms-designs.com/ftopict-10-pojoaque-style-for-highlight-js-code-highlighter.html\n * Based on Solarized Style from http://ethanschoonover.com/solarized\n * http://softwaremaniacs.org/media/soft/highlight/test.html\n */\n\nconst POJOAQUE = \"remirror-pojoaque\";\n/**\n * VS theme by Andrew Lock (https://andrewlock.net) Inspired by Visual Studio\n * syntax coloring\n */\n\nconst VS = \"remirror-vs\";\n/**\n * xonokai theme for JavaScript, CSS and HTML based on:\n * https://github.com/MoOx/sass-prism-theme-base by Maxime Thirouin ~ MoOx -->\n * http://moox.fr/ , which is Loosely based on Monokai textmate theme by\n * http://www.monokai.nl/ license: MIT; http://moox.mit-license.org/\n */\n\nconst XONOKAI = \"remirror-xonokai\";\n\nvar extensionCodeBlockTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  WRAP: WRAP,\n  A11Y_DARK: A11Y_DARK,\n  ATOM_DARK: ATOM_DARK,\n  BASE16_ATELIERSULPHURPOOL_LIGHT: BASE16_ATELIERSULPHURPOOL_LIGHT,\n  CB: CB,\n  DARCULA: DARCULA,\n  DRACULA: DRACULA,\n  DUOTONE_DARK: DUOTONE_DARK,\n  DUOTONE_EARTH: DUOTONE_EARTH,\n  DUOTONE_FOREST: DUOTONE_FOREST,\n  DUOTONE_LIGHT: DUOTONE_LIGHT,\n  DUOTONE_SEA: DUOTONE_SEA,\n  DUOTONE_SPACE: DUOTONE_SPACE,\n  GH_COLORS: GH_COLORS,\n  HOPSCOTCH: HOPSCOTCH,\n  POJOAQUE: POJOAQUE,\n  VS: VS,\n  XONOKAI: XONOKAI\n});\n\nconst EDITOR$5 = \"remirror-editor\";\n\nvar extensionCountTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR$5\n});\n\nconst EMOJI_IMAGE = \"remirror-emoji-image\";\nconst EMOJI_WRAPPER = \"remirror-emoji-wrapper\";\nconst EMOJI_POPUP_ITEM = \"remirror-emoji-popup-item\";\nconst EMOJI_POPUP_HOVERED = \"remirror-emoji-popup-hovered\";\nconst EMOJI_POPUP_HIGHLIGHT = \"remirror-emoji-popup-highlight\";\nconst EMOJI_POPUP_WRAPPER = \"remirror-emoji-popup-wrapper\";\nconst EMOJI_POPUP_NAME = \"remirror-emoji-popup-name\";\nconst EMOJI_POPUP_CHAR = \"remirror-emoji-popup-char\";\n\nvar extensionEmojiTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EMOJI_IMAGE: EMOJI_IMAGE,\n  EMOJI_WRAPPER: EMOJI_WRAPPER,\n  EMOJI_POPUP_ITEM: EMOJI_POPUP_ITEM,\n  EMOJI_POPUP_HOVERED: EMOJI_POPUP_HOVERED,\n  EMOJI_POPUP_HIGHLIGHT: EMOJI_POPUP_HIGHLIGHT,\n  EMOJI_POPUP_WRAPPER: EMOJI_POPUP_WRAPPER,\n  EMOJI_POPUP_NAME: EMOJI_POPUP_NAME,\n  EMOJI_POPUP_CHAR: EMOJI_POPUP_CHAR\n});\n\nconst FILE_ROOT = \"remirror-file-root\";\nconst FILE_NAME = \"remirror-file-name\";\nconst FILE_SIZE = \"remirror-file-size\";\nconst FILE_UPLOAD_PROGRESS = \"remirror-file-upload-progress\";\nconst FILE_ERROR = \"remirror-file-error\";\nconst FILE_ICON_BUTTON = \"remirror-file-icon-button\";\n\nvar extensionFileTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  FILE_ROOT: FILE_ROOT,\n  FILE_NAME: FILE_NAME,\n  FILE_SIZE: FILE_SIZE,\n  FILE_UPLOAD_PROGRESS: FILE_UPLOAD_PROGRESS,\n  FILE_ERROR: FILE_ERROR,\n  FILE_ICON_BUTTON: FILE_ICON_BUTTON\n});\n\n/**\n * This is compiled into the class name `remirror-editor` and the css is\n * automatically generated and placed into the `@remirror/styles/core.css` via\n * a `linaria` build script.\n */\n\nconst EDITOR$4 = \"remirror-editor\";\n\nvar extensionGapCursorTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR$4\n});\n\n/**\n * A class for the default media loader.\n */\n\nconst IMAGE_LOADER = \"remirror-image-loader\";\n\nvar extensionImageTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IMAGE_LOADER: IMAGE_LOADER\n});\n\nconst LIST_ITEM_WITH_CUSTOM_MARKER = 'remirror-list-item-with-custom-mark';\nconst UL_LIST_CONTENT = 'remirror-ul-list-content';\nconst EDITOR$3 = \"remirror-editor\";\nconst LIST_ITEM_MARKER_CONTAINER = \"remirror-list-item-marker-container\";\nconst LIST_ITEM_CHECKBOX = \"remirror-list-item-checkbox\";\nconst COLLAPSIBLE_LIST_ITEM_CLOSED = \"remirror-collapsible-list-item-closed\";\nconst COLLAPSIBLE_LIST_ITEM_BUTTON = \"remirror-collapsible-list-item-button\";\nconst LIST_SPINE = \"remirror-list-spine\";\n\nvar extensionListTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LIST_ITEM_WITH_CUSTOM_MARKER: LIST_ITEM_WITH_CUSTOM_MARKER,\n  UL_LIST_CONTENT: UL_LIST_CONTENT,\n  EDITOR: EDITOR$3,\n  LIST_ITEM_MARKER_CONTAINER: LIST_ITEM_MARKER_CONTAINER,\n  LIST_ITEM_CHECKBOX: LIST_ITEM_CHECKBOX,\n  COLLAPSIBLE_LIST_ITEM_CLOSED: COLLAPSIBLE_LIST_ITEM_CLOSED,\n  COLLAPSIBLE_LIST_ITEM_BUTTON: COLLAPSIBLE_LIST_ITEM_BUTTON,\n  LIST_SPINE: LIST_SPINE\n});\n\nconst MENTION_ATOM = \"remirror-mention-atom\";\nconst SUGGEST_ATOM = \"remirror-suggest-atom\";\nconst MENTION_ATOM_POPUP_ITEM = \"remirror-mention-atom-popup-item\";\nconst MENTION_ATOM_POPUP_HOVERED = \"remirror-mention-atom-popup-hovered\";\nconst MENTION_ATOM_POPUP_HIGHLIGHT = \"remirror-mention-atom-popup-highlight\";\nconst MENTION_ATOM_POPUP_WRAPPER = \"remirror-mention-atom-popup-wrapper\";\nconst MENTION_ATOM_POPUP_NAME = \"remirror-mention-atom-popup-name\";\nconst MENTION_ATOM_ZERO_ITEMS = \"remirror-mention-atom-zero-items\";\nconst MENTION_ATOM_POPUP_CHAR = \"remirror-mention-atom-popup-char\";\n\nvar extensionMentionAtomTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MENTION_ATOM: MENTION_ATOM,\n  SUGGEST_ATOM: SUGGEST_ATOM,\n  MENTION_ATOM_POPUP_ITEM: MENTION_ATOM_POPUP_ITEM,\n  MENTION_ATOM_POPUP_HOVERED: MENTION_ATOM_POPUP_HOVERED,\n  MENTION_ATOM_POPUP_HIGHLIGHT: MENTION_ATOM_POPUP_HIGHLIGHT,\n  MENTION_ATOM_POPUP_WRAPPER: MENTION_ATOM_POPUP_WRAPPER,\n  MENTION_ATOM_POPUP_NAME: MENTION_ATOM_POPUP_NAME,\n  MENTION_ATOM_ZERO_ITEMS: MENTION_ATOM_ZERO_ITEMS,\n  MENTION_ATOM_POPUP_CHAR: MENTION_ATOM_POPUP_CHAR\n});\n\n/**\n * The styles for the placeholder which denotes the document is empty.\n */\n\nconst IS_EMPTY = \"remirror-is-empty\";\n\nvar extensionPlaceholderTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_EMPTY: IS_EMPTY\n});\n\nconst EDITOR$2 = \"remirror-editor\";\nconst POSITIONER = \"remirror-positioner\";\nconst POSITIONER_WIDGET = \"remirror-positioner-widget\";\n\nvar extensionPositionerTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR$2,\n  POSITIONER: POSITIONER,\n  POSITIONER_WIDGET: POSITIONER_WIDGET\n});\n\nconst controllerSize = 12;\nconst markRadius = 2; // following two class names are provided by `prosemirror-tables`\n\nconst COLUMN_RESIZE_HANDLE = 'column-resize-handle';\nconst SELECTED_CELL = 'selectedCell'; /////////////////////////////////////////////////////////////////\n\nconst EDITOR$1 = \"remirror-editor\"; /////////////////////////////////////////////////////////////////\n\nconst TABLE = 'remirror-table';\nconst TABLE_SHOW_CONTROLLERS = 'remirror-table-show-controllers';\nconst TABLE_CONTROLLER = 'remirror-table-controller';\nconst TABLE_CONTROLLER_WRAPPER = 'remirror-table-controller-wrapper';\nconst TABLE_CONTROLLER_TRIGGER_AREA = 'remirror-table-controller-trigger-area';\nconst TABLE_CONTROLLER_MARK_ROW_CORNER = 'remirror-table-controller-mark-row-corner';\nconst TABLE_CONTROLLER_MARK_COLUMN_CORNER = 'remirror-table-controller-mark-column-corner';\n/**\n * A set of CSS style segements that can be reused multiple times later\n *\n * Since linaria has a limit ability to extend style (compared to emotion), we\n * need to write the CSS style segements as string values and then use then in\n * the `css` template literals.\n */\n\n(() => {\n  // To get the benefits from typescript-styled-plugin like auto-completion and\n  // syntax error reporting, we create a fake \"css\" function to cheat it.\n  const css = String.raw;\n  const tableController = css`\n    overflow: visible;\n    padding: 0;\n    cursor: pointer;\n    z-index: 15;\n    position: relative;\n  `;\n  const tableControllerTriggerArea = css`\n    flex: 1;\n    position: relative;\n    z-index: 10;\n\n    /* Style for debug. Use linear-gradient as background so that we can differentiate two neighbor areas. */\n    /* background: linear-gradient(to left top, rgba(0, 255, 100, 0.2), rgba(200, 100, 255, 0.2)); */\n  `;\n  const tableControllerWrapper = css`\n    overflow: visible;\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n  `;\n  const tableControllerMark = css`\n    position: absolute;\n    width: 0px;\n    height: 0px;\n    border-radius: 50%;\n    border-style: solid;\n    border-color: ${getThemeVar('color', 'table', 'mark')};\n    border-width: ${markRadius}px;\n  `;\n  const tableControllerMarkRowCorner = css`\n    bottom: -${markRadius}px;\n    left: -12px;\n\n    ${tableControllerMark}\n  `;\n  const tableControllerMarkColumnCorner = css`\n    ${tableControllerMark}\n\n    right: -${markRadius}px;\n    top: -12px;\n  `;\n  const tableCornerController = css`\n    ${tableController}\n\n    height: ${controllerSize}px;\n    width: ${controllerSize}px;\n\n    & div.${TABLE_CONTROLLER_WRAPPER} {\n      ${tableControllerWrapper}\n\n      width: ${controllerSize}px;\n      height: ${controllerSize}px;\n    }\n\n    & div.${TABLE_CONTROLLER_TRIGGER_AREA} {\n      ${tableControllerTriggerArea}\n\n      display: none;\n    }\n\n    & div.${TABLE_CONTROLLER_MARK_ROW_CORNER} {\n      ${tableControllerMarkRowCorner}\n    }\n    & div.${TABLE_CONTROLLER_MARK_COLUMN_CORNER} {\n      ${tableControllerMarkColumnCorner}\n    }\n  `;\n  const tableColumnController = css`\n    ${tableController}\n\n    height: ${controllerSize}px;\n\n    & div.${TABLE_CONTROLLER_WRAPPER} {\n      ${tableControllerWrapper}\n\n      width: 100%;\n      height: ${controllerSize}px;\n      flex-direction: row;\n    }\n\n    & div.${TABLE_CONTROLLER_TRIGGER_AREA} {\n      ${tableControllerTriggerArea}\n\n      height: 36px;\n    }\n\n    & div.${TABLE_CONTROLLER_MARK_ROW_CORNER} {\n      display: none;\n    }\n    & div.${TABLE_CONTROLLER_MARK_COLUMN_CORNER} {\n      ${tableControllerMarkColumnCorner}\n    }\n  `;\n  const tableRowController = css`\n    ${tableController}\n\n    width: ${controllerSize}px;\n\n    & div.${TABLE_CONTROLLER_WRAPPER} {\n      ${tableControllerWrapper}\n\n      height: 100%;\n      width: ${controllerSize}px;\n      flex-direction: column;\n    }\n\n    & div.${TABLE_CONTROLLER_TRIGGER_AREA} {\n      ${tableControllerTriggerArea}\n\n      width: 36px;\n    }\n\n    & div.${TABLE_CONTROLLER_MARK_ROW_CORNER} {\n      ${tableControllerMarkRowCorner}\n    }\n    & div.${TABLE_CONTROLLER_MARK_COLUMN_CORNER} {\n      display: none;\n    }\n  `;\n  return {\n    tableCornerController,\n    tableColumnController,\n    tableRowController\n  };\n})();\n\nconst TABLE_COLGROUP = \"remirror-table-colgroup\"; // Any element with this class will be hidden when the controllers are hidden\n\nconst CONTROLLERS_TOGGLE = \"remirror-controllers-toggle\";\nconst TABLE_INSERT_BUTTON = \"remirror-table-insert-button\";\nconst TABLE_DELETE_INNER_BUTTON = \"remirror-table-delete-inner-button\";\nconst TABLE_DELETE_TABLE_INNER_BUTTON = \"remirror-table-delete-table-inner-button\";\nconst TABLE_DELETE_ROW_COLUMN_INNER_BUTTON = \"remirror-table-delete-row-column-inner-button\";\nconst TABLE_WITH_CONTROLLERS = \"remirror-table-with-controllers\";\nconst TABLE_WAITTING_CONTROLLERS = \"remirror-table-waitting-controllers\";\nconst TABLE_TBODY_WITH_CONTROLLERS = \"remirror-table-tbody-with-controllers\";\nconst TABLE_PRESELECT_ALL = \"remirror-table-preselect-all\";\nconst TABLE_SHOW_PREDELETE = \"remirror-table-show-predelete\";\n\nvar extensionTablesTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  COLUMN_RESIZE_HANDLE: COLUMN_RESIZE_HANDLE,\n  SELECTED_CELL: SELECTED_CELL,\n  EDITOR: EDITOR$1,\n  TABLE: TABLE,\n  TABLE_SHOW_CONTROLLERS: TABLE_SHOW_CONTROLLERS,\n  TABLE_CONTROLLER: TABLE_CONTROLLER,\n  TABLE_CONTROLLER_WRAPPER: TABLE_CONTROLLER_WRAPPER,\n  TABLE_CONTROLLER_TRIGGER_AREA: TABLE_CONTROLLER_TRIGGER_AREA,\n  TABLE_CONTROLLER_MARK_ROW_CORNER: TABLE_CONTROLLER_MARK_ROW_CORNER,\n  TABLE_CONTROLLER_MARK_COLUMN_CORNER: TABLE_CONTROLLER_MARK_COLUMN_CORNER,\n  TABLE_COLGROUP: TABLE_COLGROUP,\n  CONTROLLERS_TOGGLE: CONTROLLERS_TOGGLE,\n  TABLE_INSERT_BUTTON: TABLE_INSERT_BUTTON,\n  TABLE_DELETE_INNER_BUTTON: TABLE_DELETE_INNER_BUTTON,\n  TABLE_DELETE_TABLE_INNER_BUTTON: TABLE_DELETE_TABLE_INNER_BUTTON,\n  TABLE_DELETE_ROW_COLUMN_INNER_BUTTON: TABLE_DELETE_ROW_COLUMN_INNER_BUTTON,\n  TABLE_WITH_CONTROLLERS: TABLE_WITH_CONTROLLERS,\n  TABLE_WAITTING_CONTROLLERS: TABLE_WAITTING_CONTROLLERS,\n  TABLE_TBODY_WITH_CONTROLLERS: TABLE_TBODY_WITH_CONTROLLERS,\n  TABLE_PRESELECT_ALL: TABLE_PRESELECT_ALL,\n  TABLE_SHOW_PREDELETE: TABLE_SHOW_PREDELETE\n});\n\n/**\n * This generates the `css` for the package `@remirror/extension-whitespace`.\n */\n\nconst EDITOR = \"remirror-editor\";\n\nvar extensionWhitespaceTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  EDITOR: EDITOR\n});\n\nvar reactEditorsTheme = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\n/**\n * Create the theme variables from the provided theme.\n * The class name for adding theme styles to the remirror editor.\n */\n\nconst THEME = \"remirror-theme\";\n\nexport { componentsTheme as ComponentsTheme, coreTheme as CoreTheme, extensionBlockquoteTheme as ExtensionBlockquoteTheme, extensionCalloutTheme as ExtensionCalloutTheme, extensionCodeBlockTheme as ExtensionCodeBlockTheme, extensionCountTheme as ExtensionCountTheme, extensionEmojiTheme as ExtensionEmojiTheme, extensionFileTheme as ExtensionFileTheme, extensionGapCursorTheme as ExtensionGapCursorTheme, extensionImageTheme as ExtensionImageTheme, extensionListTheme as ExtensionListTheme, extensionMentionAtomTheme as ExtensionMentionAtomTheme, extensionPlaceholderTheme as ExtensionPlaceholderTheme, extensionPositionerTheme as ExtensionPositionerTheme, extensionTablesTheme as ExtensionTablesTheme, extensionWhitespaceTheme as ExtensionWhitespaceTheme, reactEditorsTheme as ReactEditorsTheme, THEME, createThemeVariables, defaultRemirrorTheme, getTheme, getThemeProps, getThemeVar, getThemeVarName };\n"],"names":[],"sourceRoot":""}